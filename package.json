{
	"activationEvents": [
		"onTaskType:docker-build",
		"onTaskType:docker-run",
		"onTaskType:docker-compose",
		"onDebugInitialConfigurations",
		"onDebugResolve:docker",
		"onFileSystem:docker",
		"onLanguage:dockerfile",
		"onLanguage:dockercompose"
	],
	"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
	"capabilities": {
		"untrustedWorkspaces": {
			"description": "%vscode-docker.workspaceTrust.description%",
			"restrictedConfigurations": [
				"docker.commands.build",
				"docker.commands.run",
				"docker.commands.runInteractive",
				"docker.commands.attach",
				"docker.commands.logs",
				"docker.commands.composeUp",
				"docker.commands.composeDown",
				"docker.environment",
				"docker.scaffolding.templatePath",
				"docker.dockerPath",
				"docker.composeCommand"
			],
			"supported": "limited"
		},
		"virtualWorkspaces": false
	},
	"contributes": {
		"commands": [
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.compose.down",
				"title": "%vscode-docker.commands.compose.down%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.compose.restart",
				"title": "%vscode-docker.commands.compose.restart%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.compose.up",
				"title": "%vscode-docker.commands.compose.up%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.compose.up.subset",
				"title": "%vscode-docker.commands.compose.up.subset%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.configure",
				"title": "%vscode-docker.commands.configure%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.configureCompose",
				"title": "%vscode-docker.commands.configureCompose%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.openDockerDownloadPage",
				"title": "%vscode-docker.commands.openDockerDownloadPage%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.attachShell",
				"title": "%vscode-docker.commands.containers.attachShell%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.browse",
				"title": "%vscode-docker.commands.containers.browse%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.configureExplorer",
				"icon": "$(settings-gear)",
				"title": "%vscode-docker.commands.containers.configureExplorer%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.downloadFile",
				"icon": "$(desktop-download)",
				"title": "%vscode-docker.commands.containers.downloadFile%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.inspect",
				"title": "%vscode-docker.commands.containers.inspect%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.openFile",
				"icon": "$(go-to-file)",
				"title": "%vscode-docker.commands.containers.openFile%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.prune",
				"icon": "$(clear-all)",
				"title": "%vscode-docker.commands.containers.prune%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.refresh",
				"icon": "$(refresh)",
				"title": "%vscode-docker.commands.containers.refresh%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.remove",
				"title": "%vscode-docker.commands.containers.remove%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.group.remove",
				"title": "%vscode-docker.commands.containers.group.remove%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.restart",
				"title": "%vscode-docker.commands.containers.restart%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.select",
				"title": "%vscode-docker.commands.containers.select%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.start",
				"title": "%vscode-docker.commands.containers.start%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.stop",
				"title": "%vscode-docker.commands.containers.stop%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.containers.stats",
				"title": "%vscode-docker.commands.containers.stats%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.viewLogs",
				"title": "%vscode-docker.commands.containers.viewLogs%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.composeGroup.logs",
				"title": "%vscode-docker.commands.containers.composeGroup.logs%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.composeGroup.start",
				"title": "%vscode-docker.commands.containers.composeGroup.start%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.composeGroup.stop",
				"title": "%vscode-docker.commands.containers.composeGroup.stop%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.composeGroup.restart",
				"title": "%vscode-docker.commands.containers.composeGroup.restart%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"command": "vscode-docker.containers.composeGroup.down",
				"title": "%vscode-docker.commands.containers.composeGroup.down%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.debugging.initializeForDebugging",
				"title": "%vscode-docker.commands.debugging.initializeForDebugging%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.build",
				"title": "%vscode-docker.commands.images.build%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.configureExplorer",
				"icon": "$(settings-gear)",
				"title": "%vscode-docker.commands.images.configureExplorer%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.inspect",
				"title": "%vscode-docker.commands.images.inspect%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.prune",
				"icon": "$(clear-all)",
				"title": "%vscode-docker.commands.images.prune%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.showDangling",
				"icon": "$(eye)",
				"title": "%vscode-docker.commands.images.showDangling%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.hideDangling",
				"icon": "$(eye-closed)",
				"title": "%vscode-docker.commands.images.hideDangling%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.pull",
				"title": "%vscode-docker.commands.images.pull%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.push",
				"title": "%vscode-docker.commands.images.push%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.refresh",
				"icon": "$(refresh)",
				"title": "%vscode-docker.commands.images.refresh%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.remove",
				"title": "%vscode-docker.commands.images.remove%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.group.remove",
				"title": "%vscode-docker.commands.images.group.remove%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.run",
				"title": "%vscode-docker.commands.images.run%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.runAzureCli",
				"title": "%vscode-docker.commands.images.runAzureCli%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.runInteractive",
				"title": "%vscode-docker.commands.images.runInteractive%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.tag",
				"title": "%vscode-docker.commands.images.tag%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerImages%",
				"command": "vscode-docker.images.copyFullTag",
				"title": "%vscode-docker.commands.images.copyFullTag%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"command": "vscode-docker.networks.configureExplorer",
				"icon": "$(settings-gear)",
				"title": "%vscode-docker.commands.networks.configureExplorer%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"command": "vscode-docker.networks.create",
				"icon": "$(add)",
				"title": "%vscode-docker.commands.networks.create%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"command": "vscode-docker.networks.inspect",
				"title": "%vscode-docker.commands.networks.inspect%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"command": "vscode-docker.networks.prune",
				"icon": "$(clear-all)",
				"title": "%vscode-docker.commands.networks.prune%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"command": "vscode-docker.networks.refresh",
				"icon": "$(refresh)",
				"title": "%vscode-docker.commands.networks.refresh%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"command": "vscode-docker.networks.remove",
				"title": "%vscode-docker.commands.networks.remove%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.pruneSystem",
				"title": "%vscode-docker.commands.pruneSystem%"
			},
			{
				"category": "%vscode-docker.commands.category.azureContainerRegistry%",
				"command": "vscode-docker.registries.azure.buildImage",
				"title": "%vscode-docker.commands.registries.azure.buildImage%"
			},
			{
				"category": "%vscode-docker.commands.category.azureContainerRegistry%",
				"command": "vscode-docker.registries.azure.createRegistry",
				"title": "%vscode-docker.commands.registries.azure.createRegistry%"
			},
			{
				"category": "%vscode-docker.commands.category.azureContainerRegistry%",
				"command": "vscode-docker.registries.azure.deleteRegistry",
				"title": "%vscode-docker.commands.registries.azure.deleteRegistry%"
			},
			{
				"category": "%vscode-docker.commands.category.azureContainerRegistry%",
				"command": "vscode-docker.registries.azure.deleteRepository",
				"title": "%vscode-docker.commands.registries.azure.deleteRepository%"
			},
			{
				"category": "%vscode-docker.commands.category.azureContainerRegistry%",
				"command": "vscode-docker.registries.azure.openInPortal",
				"title": "%vscode-docker.commands.registries.azure.openInPortal%"
			},
			{
				"category": "%vscode-docker.commands.category.azureContainerRegistry%",
				"command": "vscode-docker.registries.azure.untagImage",
				"title": "%vscode-docker.commands.registries.azure.untagImage%"
			},
			{
				"category": "%vscode-docker.commands.category.azureContainerRegistry%",
				"command": "vscode-docker.registries.azure.viewProperties",
				"title": "%vscode-docker.commands.registries.azure.viewProperties%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.connectRegistry",
				"icon": "$(plug)",
				"title": "%vscode-docker.commands.registries.connect%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.copyImageDigest",
				"title": "%vscode-docker.commands.registries.copyImageDigest%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.inspectRemoteImageManifest",
				"title": "%vscode-docker.commands.registries.inspectRemoteImageManifest%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.copyRemoteFullTag",
				"title": "%vscode-docker.commands.registries.copyRemoteFullTag%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.deleteImage",
				"title": "%vscode-docker.commands.registries.deleteImage%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.deployImageToAzure",
				"title": "%vscode-docker.commands.registries.deployImageToAzure%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.deployImageToAca",
				"title": "%vscode-docker.commands.registries.deployImageToAca%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.disconnectRegistry",
				"title": "%vscode-docker.commands.registries.disconnectRegistry%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.genericV2.removeTrackedRegistry",
				"title": "%vscode-docker.commands.registries.genericV2.removeTrackedRegistry%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.genericV2.addTrackedRegistry",
				"title": "%vscode-docker.commands.registries.genericV2.addTrackedRegistry%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerHub%",
				"command": "vscode-docker.registries.dockerHub.openInBrowser",
				"title": "%vscode-docker.commands.registries.dockerHub.openInBrowser%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.help",
				"icon": "$(question)",
				"title": "%vscode-docker.commands.registries.help%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.logInToDockerCli",
				"title": "%vscode-docker.commands.registries.logInToDockerCli%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.logOutOfDockerCli",
				"title": "%vscode-docker.commands.registries.logOutOfDockerCli%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.pullImage",
				"title": "%vscode-docker.commands.registries.pullImage%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.pullRepository",
				"title": "%vscode-docker.commands.registries.pullRepository%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.reconnectRegistry",
				"title": "%vscode-docker.commands.registries.reconnectRegistry%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"command": "vscode-docker.registries.refresh",
				"icon": "$(refresh)",
				"title": "%vscode-docker.commands.registries.refresh%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"command": "vscode-docker.volumes.configureExplorer",
				"icon": "$(settings-gear)",
				"title": "%vscode-docker.commands.volumes.configureExplorer%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"command": "vscode-docker.volumes.inspect",
				"title": "%vscode-docker.commands.volumes.inspect%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"command": "vscode-docker.volumes.prune",
				"icon": "$(clear-all)",
				"title": "%vscode-docker.commands.volumes.prune%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"command": "vscode-docker.volumes.refresh",
				"icon": "$(refresh)",
				"title": "%vscode-docker.commands.volumes.refresh%"
			},
			{
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"command": "vscode-docker.volumes.remove",
				"title": "%vscode-docker.commands.volumes.remove%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.help",
				"icon": "$(question)",
				"title": "%vscode-docker.commands.help%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.help.reportIssue",
				"title": "%vscode-docker.commands.help.reportIssue%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.help.openWalkthrough",
				"title": "%vscode-docker.commands.help.openWalkthrough%"
			},
			{
				"category": "%vscode-docker.commands.category.contexts%",
				"command": "vscode-docker.contexts.use",
				"icon": "$(check)",
				"title": "%vscode-docker.commands.contexts.use%"
			},
			{
				"category": "%vscode-docker.commands.category.contexts%",
				"command": "vscode-docker.contexts.remove",
				"title": "%vscode-docker.commands.contexts.remove%"
			},
			{
				"category": "%vscode-docker.commands.category.contexts%",
				"command": "vscode-docker.contexts.inspect",
				"title": "%vscode-docker.commands.contexts.inspect%"
			},
			{
				"category": "%vscode-docker.commands.category.contexts%",
				"command": "vscode-docker.contexts.configureExplorer",
				"icon": "$(settings-gear)",
				"title": "%vscode-docker.commands.contexts.configureExplorer%"
			},
			{
				"category": "%vscode-docker.commands.category.contexts%",
				"command": "vscode-docker.contexts.refresh",
				"icon": "$(refresh)",
				"title": "%vscode-docker.commands.contexts.refresh%"
			},
			{
				"category": "%vscode-docker.commands.category.contexts%",
				"command": "vscode-docker.contexts.help",
				"icon": "$(question)",
				"title": "%vscode-docker.commands.contexts.help%"
			},
			{
				"category": "%vscode-docker.commands.category.docker%",
				"command": "vscode-docker.activateRegistryProviders",
				"title": "%vscode-docker.commands.activateRegistryProviders%"
			}
		],
		"configuration": {
			"properties": {
				"docker.commands.attach": {
					"default": "${containerCommand} exec -it ${containerId} ${shellCommand}",
					"description": "%vscode-docker.config.template.attach.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.attach.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.attach.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.attach.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.commands.build": {
					"default": "${containerCommand} build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\"",
					"description": "%vscode-docker.config.template.build.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.build.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.build.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.build.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.commands.composeDown": {
					"default": [
						{
							"label": "Compose Down",
							"template": "${composeCommand} ${configurationFile} down"
						}
					],
					"description": "%vscode-docker.config.template.composeDown.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.composeDown.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.composeDown.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.composeDown.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.commands.composeUp": {
					"default": [
						{
							"label": "Compose Up",
							"template": "${composeCommand} ${configurationFile} up ${detached} ${build}"
						}
					],
					"description": "%vscode-docker.config.template.composeUp.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.composeUp.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.composeUp.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.composeUp.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.commands.composeUpSubset": {
					"default": [
						{
							"label": "Compose Up",
							"template": "${composeCommand} ${profileList} ${configurationFile} up ${detached} ${build} ${serviceList}"
						}
					],
					"description": "%vscode-docker.config.template.composeUpSubset.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.composeUpSubset.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.composeUpSubset.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.composeUpSubset.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.commands.logs": {
					"default": "${containerCommand} logs --tail 1000 -f ${containerId}",
					"description": "%vscode-docker.config.template.logs.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.logs.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.logs.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.logs.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.commands.run": {
					"default": "${containerCommand} run --rm -d ${exposedPorts} ${tag}",
					"description": "%vscode-docker.config.template.run.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.run.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.run.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.run.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.commands.runInteractive": {
					"default": "${containerCommand} run --rm -it ${exposedPorts} ${tag}",
					"description": "%vscode-docker.config.template.runInteractive.description%",
					"oneOf": [
						{
							"items": {
								"properties": {
									"label": {
										"description": "%vscode-docker.config.template.runInteractive.label%",
										"type": "string"
									},
									"match": {
										"description": "%vscode-docker.config.template.runInteractive.match%",
										"type": "string"
									},
									"template": {
										"description": "%vscode-docker.config.template.runInteractive.template%",
										"type": "string"
									}
								},
								"required": [
									"label",
									"template"
								]
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"docker.composeCommand": {
					"description": "%vscode-docker.config.docker.composeCommand%",
					"scope": "machine-overridable",
					"type": "string"
				},
				"docker.containers.description": {
					"default": [
						"ContainerName",
						"Status"
					],
					"description": "%vscode-docker.config.docker.containers.description%",
					"items": {
						"enum": [
							"Compose Project Name",
							"ContainerId",
							"ContainerName",
							"CreatedTime",
							"FullTag",
							"ImageId",
							"Networks",
							"Ports",
							"Registry",
							"Repository",
							"RepositoryName",
							"RepositoryNameAndTag",
							"State",
							"Status",
							"Tag"
						],
						"type": "string"
					},
					"type": "array"
				},
				"docker.containers.groupBy": {
					"default": "Compose Project Name",
					"description": "%vscode-docker.config.docker.containers.groupBy%",
					"enum": [
						"Compose Project Name",
						"ContainerId",
						"ContainerName",
						"CreatedTime",
						"FullTag",
						"ImageId",
						"Networks",
						"None",
						"Ports",
						"Registry",
						"Repository",
						"RepositoryName",
						"RepositoryNameAndTag",
						"State",
						"Status",
						"Tag",
						"Label"
					],
					"type": "string"
				},
				"docker.containers.groupByLabel": {
					"description": "%vscode-docker.config.docker.containers.groupByLabel%",
					"type": "string"
				},
				"docker.containers.label": {
					"default": "FullTag",
					"description": "%vscode-docker.config.docker.containers.label%",
					"enum": [
						"Compose Project Name",
						"ContainerId",
						"ContainerName",
						"CreatedTime",
						"FullTag",
						"ImageId",
						"Networks",
						"Ports",
						"Registry",
						"Repository",
						"RepositoryName",
						"RepositoryNameAndTag",
						"State",
						"Status",
						"Tag"
					],
					"type": "string"
				},
				"docker.containers.sortBy": {
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.containers.sortBy%",
					"enum": [
						"CreatedTime",
						"Label"
					],
					"type": "string"
				},
				"docker.contexts.description": {
					"default": [
						"Description"
					],
					"description": "%vscode-docker.config.docker.contexts.description%",
					"items": {
						"enum": [
							"Name",
							"Description",
							"DockerEndpoint"
						],
						"type": "string"
					},
					"type": "array"
				},
				"docker.contexts.label": {
					"default": "Name",
					"description": "%vscode-docker.config.docker.contexts.label%",
					"enum": [
						"Name",
						"Description",
						"DockerEndpoint"
					],
					"type": "string"
				},
				"docker.contexts.showInStatusBar": {
					"default": false,
					"description": "%vscode-docker.config.docker.contexts.showInStatusBar%",
					"type": "boolean"
				},
				"docker.dockerComposeBuild": {
					"default": true,
					"description": "%vscode-docker.config.docker.dockerComposeBuild%",
					"type": "boolean"
				},
				"docker.dockerComposeDetached": {
					"default": true,
					"description": "%vscode-docker.config.docker.dockerComposeDetached%",
					"type": "boolean"
				},
				"docker.dockerPath": {
					"description": "%vscode-docker.config.docker.dockerPath%",
					"scope": "machine-overridable",
					"type": "string"
				},
				"docker.enableDockerComposeLanguageService": {
					"default": true,
					"description": "%vscode-docker.config.docker.enableDockerComposeLanguageService%",
					"type": "boolean"
				},
				"docker.environment": {
					"additionalProperties": {
						"type": "string"
					},
					"description": "%vscode-docker.config.docker.environment%",
					"scope": "machine-overridable",
					"type": "object"
				},
				"docker.imageBuildContextPath": {
					"default": "",
					"description": "%vscode-docker.config.docker.imageBuildContextPath%",
					"scope": "machine-overridable",
					"type": "string"
				},
				"docker.images.checkForOutdatedImages": {
					"default": true,
					"description": "%vscode-docker.config.docker.images.checkForOutdatedImages%",
					"type": "boolean"
				},
				"docker.images.description": {
					"default": [
						"CreatedTime"
					],
					"description": "%vscode-docker.config.docker.images.description%",
					"items": {
						"enum": [
							"CreatedTime",
							"FullTag",
							"ImageId",
							"Registry",
							"Repository",
							"RepositoryName",
							"RepositoryNameAndTag",
							"Tag",
							"Size"
						],
						"type": "string"
					},
					"type": "array"
				},
				"docker.images.groupBy": {
					"default": "Repository",
					"description": "%vscode-docker.config.docker.images.groupBy%",
					"enum": [
						"CreatedTime",
						"FullTag",
						"ImageId",
						"None",
						"Registry",
						"Repository",
						"RepositoryName",
						"RepositoryNameAndTag",
						"Tag"
					],
					"type": "string"
				},
				"docker.images.label": {
					"default": "Tag",
					"description": "%vscode-docker.config.docker.images.label%",
					"enum": [
						"CreatedTime",
						"FullTag",
						"ImageId",
						"Registry",
						"Repository",
						"RepositoryName",
						"RepositoryNameAndTag",
						"Tag",
						"Size"
					],
					"type": "string"
				},
				"docker.images.sortBy": {
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.images.sortBy%",
					"enum": [
						"CreatedTime",
						"Label",
						"Size"
					],
					"type": "string"
				},
				"docker.languageserver.diagnostics.deprecatedMaintainer": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.deprecatedMaintainer%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.directiveCasing": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.directiveCasing%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.emptyContinuationLine": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.emptyContinuationLine%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.instructionCasing": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionCasing%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.instructionCmdMultiple": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionCmdMultiple%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.instructionEntrypointMultiple": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionEntrypointMultiple%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.instructionHealthcheckMultiple": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionHealthcheckMultiple%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.instructionJSONInSingleQuotes": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionJsonInSingleQuotes%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.diagnostics.instructionWorkdirRelative": {
					"default": "warning",
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionWorkdirRelative%",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"scope": "resource",
					"type": "string"
				},
				"docker.languageserver.formatter.ignoreMultilineInstructions": {
					"default": false,
					"description": "%vscode-docker.config.docker.languageserver.formatter.ignoreMultilineInstructions%",
					"scope": "resource",
					"type": "boolean"
				},
				"docker.networks.description": {
					"default": [
						"NetworkDriver",
						"CreatedTime"
					],
					"description": "%vscode-docker.config.docker.networks.description%",
					"items": {
						"enum": [
							"CreatedTime",
							"NetworkDriver",
							"NetworkId",
							"NetworkName"
						],
						"type": "string"
					},
					"type": "array"
				},
				"docker.networks.groupBy": {
					"default": "None",
					"description": "%vscode-docker.config.docker.networks.groupBy%",
					"enum": [
						"CreatedTime",
						"NetworkDriver",
						"NetworkId",
						"NetworkName",
						"None"
					],
					"type": "string"
				},
				"docker.networks.label": {
					"default": "NetworkName",
					"description": "%vscode-docker.config.docker.networks.label%",
					"enum": [
						"CreatedTime",
						"NetworkDriver",
						"NetworkId",
						"NetworkName"
					],
					"type": "string"
				},
				"docker.networks.showBuiltInNetworks": {
					"default": true,
					"description": "%vscode-docker.config.docker.networks.showBuiltIn%",
					"type": "boolean"
				},
				"docker.networks.sortBy": {
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.networks.sortBy%",
					"enum": [
						"CreatedTime",
						"Label"
					],
					"type": "string"
				},
				"docker.promptForRegistryWhenPushingImages": {
					"default": true,
					"description": "%vscode-docker.config.docker.promptForRegistryWhenPushingImages%",
					"type": "boolean"
				},
				"docker.scaffolding.templatePath": {
					"description": "%vscode-docker.config.docker.scaffolding.templatePath%",
					"type": "string"
				},
				"docker.showRemoteWorkspaceWarning": {
					"default": true,
					"description": "%vscode-docker.config.docker.showRemoteWorkspaceWarning%",
					"type": "boolean"
				},
				"docker.truncateLongRegistryPaths": {
					"default": false,
					"description": "%vscode-docker.config.docker.truncateLongRegistryPaths%",
					"type": "boolean"
				},
				"docker.truncateMaxLength": {
					"default": 10,
					"description": "%vscode-docker.config.docker.truncateMaxLength%",
					"type": "number"
				},
				"docker.volumes.description": {
					"default": [
						"CreatedTime"
					],
					"description": "%vscode-docker.config.docker.volumes.description%",
					"items": {
						"enum": [
							"CreatedTime",
							"VolumeName"
						],
						"type": "string"
					},
					"type": "array"
				},
				"docker.volumes.groupBy": {
					"default": "None",
					"description": "%vscode-docker.config.docker.volumes.groupBy%",
					"enum": [
						"CreatedTime",
						"VolumeName",
						"None"
					],
					"type": "string"
				},
				"docker.volumes.label": {
					"default": "VolumeName",
					"description": "%vscode-docker.config.docker.volumes.label%",
					"enum": [
						"CreatedTime",
						"VolumeName"
					],
					"type": "string"
				},
				"docker.volumes.sortBy": {
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.volumes.sortBy%",
					"enum": [
						"CreatedTime",
						"Label"
					],
					"type": "string"
				}
			},
			"title": "Docker"
		},
		"configurationDefaults": {
			"[dockercompose]": {
				"editor.autoIndent": "advanced",
				"editor.insertSpaces": true,
				"editor.quickSuggestions": {
					"comments": false,
					"other": true,
					"strings": true
				},
				"editor.tabSize": 2
			}
		},
		"debuggers": [
			{
				"configurationAttributes": {
					"attach": {
						"properties": {
							"containerName": {
								"description": "%vscode-docker.debug.attach.containerName%",
								"type": "string"
							},
							"netCore": {
								"description": "%vscode-docker.debug.attach.netCore.description%",
								"properties": {
									"debuggerPath": {
										"description": "%vscode-docker.debug.attach.netCore.debuggerPath%",
										"type": "string"
									}
								}
							},
							"platform": {
								"description": "%vscode-docker.debug.attach.platform%",
								"enum": [
									"netCore"
								],
								"type": "string"
							},
							"processId": {
								"anyOf": [
									{
										"default": "${command:pickProcess}",
										"description": "%vscode-docker.debug.attach.processIdString%",
										"type": "string"
									},
									{
										"default": 0,
										"description": "%vscode-docker.debug.attach.processIdInteger%",
										"type": "integer"
									}
								]
							},
							"processName": {
								"description": "%vscode-docker.debug.attach.processName%",
								"type": "string"
							},
							"sourceFileMap": {
								"additionalProperties": {
									"type": "string"
								},
								"default": {
									"<insert-source-path-here>": "<insert-target-path-here>"
								},
								"description": "%vscode-docker.debug.attach.sourceFileMap%",
								"type": "object"
							}
						}
					},
					"launch": {
						"properties": {
							"containerName": {
								"description": "%vscode-docker.debug.containerName%",
								"type": "string"
							},
							"dockerServerReadyAction": {
								"description": "%vscode-docker.debug.dockerServerReadyAction.description%",
								"properties": {
									"action": {
										"description": "%vscode-docker.debug.dockerServerReadyAction.action%",
										"enum": [
											"debugWithChrome",
											"openExternally"
										],
										"type": "string"
									},
									"containerName": {
										"description": "%vscode-docker.debug.dockerServerReadyAction.containerName%",
										"type": "string"
									},
									"pattern": {
										"default": "(https?://\\S+|[0-9]+)",
										"description": "%vscode-docker.debug.dockerServerReadyAction.pattern%",
										"type": "string"
									},
									"uriFormat": {
										"default": "http://localhost:%s",
										"description": "%vscode-docker.debug.dockerServerReadyAction.uriFormat%",
										"type": "string"
									},
									"webRoot": {
										"description": "%vscode-docker.debug.dockerServerReadyAction.webRoot%",
										"type": "string"
									}
								}
							},
							"netCore": {
								"description": "%vscode-docker.debug.netCore.description%",
								"properties": {
									"appProject": {
										"description": "%vscode-docker.debug.netCore.appProject%",
										"type": "string"
									}
								},
								"required": [
									"appProject"
								]
							},
							"node": {
								"description": "%vscode-docker.debug.node.description%",
								"properties": {
									"address": {
										"description": "%vscode-docker.debug.node.address%",
										"type": "string"
									},
									"autoAttachChildProcesses": {
										"description": "%vscode-docker.debug.node.autoAttachChildProcesses%",
										"type": "boolean"
									},
									"localRoot": {
										"description": "%vscode-docker.debug.node.localRoot%",
										"type": "string"
									},
									"outFiles": {
										"description": "%vscode-docker.debug.node.outFiles%",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"package": {
										"description": "%vscode-docker.debug.node.package%",
										"type": "string"
									},
									"port": {
										"description": "%vscode-docker.debug.node.port%",
										"type": "integer"
									},
									"remoteRoot": {
										"description": "%vscode-docker.debug.node.remoteRoot%",
										"type": "string"
									},
									"skipFiles": {
										"description": "%vscode-docker.debug.node.skipFiles%",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"smartStep": {
										"description": "%vscode-docker.debug.node.smartStep%",
										"type": "boolean"
									},
									"sourceMaps": {
										"description": "%vscode-docker.debug.node.sourceMaps%",
										"type": "boolean"
									},
									"stopOnEntry": {
										"description": "%vscode-docker.debug.node.stopOnEntry%",
										"type": "boolean"
									},
									"timeout": {
										"description": "%vscode-docker.debug.node.timeout%",
										"type": "integer"
									},
									"trace": {
										"description": "%vscode-docker.debug.node.trace%",
										"type": "boolean"
									}
								}
							},
							"platform": {
								"description": "%vscode-docker.debug.platform%",
								"enum": [
									"netCore",
									"node",
									"python"
								],
								"type": "string"
							},
							"python": {
								"description": "%vscode-docker.debug.python.description%",
								"properties": {
									"args": {
										"description": "%vscode-docker.debug.python.args%",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"django": {
										"default": false,
										"description": "%vscode-docker.debug.python.django%",
										"type": "boolean"
									},
									"fastapi": {
										"default": false,
										"description": "%vscode-docker.debug.python.fastapi%",
										"type": "boolean"
									},
									"host": {
										"default": "localhost",
										"description": "%vscode-docker.debug.python.host%",
										"type": "string"
									},
									"jinja": {
										"default": false,
										"description": "%vscode-docker.debug.python.jinja%",
										"type": "boolean"
									},
									"justMyCode": {
										"description": "%vscode-docker.debug.python.justMyCode%",
										"type": "boolean"
									},
									"pathMappings": {
										"items": {
											"properties": {
												"localRoot": {
													"description": "%vscode-docker.debug.python.pathMappings.localRoot%",
													"type": "string"
												},
												"remoteRoot": {
													"description": "%vscode-docker.debug.python.pathMappings.remoteRoot%",
													"type": "string"
												}
											},
											"type": "object"
										},
										"type": "array"
									},
									"port": {
										"default": 5678,
										"description": "%vscode-docker.debug.python.port%",
										"type": "number"
									},
									"projectType": {
										"description": "%vscode-docker.debug.python.projectType%",
										"enum": [
											"django",
											"fastapi",
											"flask",
											"general"
										],
										"type": "string"
									}
								}
							},
							"removeContainerAfterDebug": {
								"default": true,
								"description": "%vscode-docker.debug.removeContainerAfterDebug%",
								"type": "boolean"
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"body": {
							"name": "Docker: Attach to Node",
							"remoteRoot": "/usr/src/app",
							"request": "attach",
							"type": "node"
						},
						"description": "Docker: Attach to Node",
						"label": "Docker: Attach to Node"
					},
					{
						"body": {
							"name": "Docker .NET Attach (Preview)",
							"platform": "netCore",
							"request": "attach",
							"sourceFileMap": {
								"/src": "^\"\\${workspaceFolder}\""
							},
							"type": "docker"
						},
						"description": "Docker: Attach to a .NET process in a container",
						"label": "Docker: .NET Attach (Preview)"
					}
				],
				"label": "Docker: Debug in Container",
				"languages": [
					"csharp",
					"razor",
					"aspnetcorerazor",
					"vb",
					"fsharp"
				],
				"type": "docker"
			}
		],
		"languages": [
			{
				"aliases": [
					"Dockerfile"
				],
				"filenamePatterns": [
					"*.dockerfile",
					"Dockerfile",
					"Dockerfile.*"
				],
				"id": "dockerfile"
			},
			{
				"filenamePatterns": [
					"*.dockerignore"
				],
				"filenames": [
					".dockerignore"
				],
				"id": "ignore"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "vscode-docker.openDockerDownloadPage",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.downloadFile",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.openFile",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.select",
					"when": "never"
				},
				{
					"command": "vscode-docker.registries.reconnectRegistry",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.composeGroup.logs",
					"when": "config.docker.containers.groupBy == 'Compose Project Name'"
				},
				{
					"command": "vscode-docker.containers.composeGroup.start",
					"when": "config.docker.containers.groupBy == 'Compose Project Name'"
				},
				{
					"command": "vscode-docker.containers.composeGroup.stop",
					"when": "config.docker.containers.groupBy == 'Compose Project Name'"
				},
				{
					"command": "vscode-docker.containers.composeGroup.restart",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.composeGroup.down",
					"when": "never"
				},
				{
					"command": "vscode-docker.compose.down",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.compose.restart",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.compose.up",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.compose.up.subset",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.configure",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.configureCompose",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.debugging.initializeForDebugging",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.images.build",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.registries.azure.buildImage",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.help.openWalkthrough",
					"when": "never"
				},
				{
					"command": "vscode-docker.images.showDangling",
					"when": "never"
				},
				{
					"command": "vscode-docker.images.hideDangling",
					"when": "never"
				},
				{
					"command": "vscode-docker.images.group.remove",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.group.remove",
					"when": "never"
				},
				{
					"command": "vscode-docker.activateRegistryProviders",
					"when": "never"
				}
			],
			"editor/context": [
				{
					"command": "vscode-docker.registries.azure.buildImage",
					"group": "docker",
					"when": "isWorkspaceTrusted && editorLangId == dockerfile"
				},
				{
					"command": "vscode-docker.compose.down",
					"group": "docker",
					"when": "isWorkspaceTrusted && editorLangId == dockercompose"
				},
				{
					"command": "vscode-docker.compose.restart",
					"group": "docker",
					"when": "isWorkspaceTrusted && editorLangId == dockercompose"
				},
				{
					"command": "vscode-docker.compose.up",
					"group": "docker",
					"when": "isWorkspaceTrusted && editorLangId == dockercompose"
				},
				{
					"command": "vscode-docker.compose.up.subset",
					"group": "docker",
					"when": "isWorkspaceTrusted && editorLangId == dockercompose"
				},
				{
					"command": "vscode-docker.images.build",
					"group": "docker",
					"when": "isWorkspaceTrusted && editorLangId == dockerfile"
				}
			],
			"explorer/context": [
				{
					"command": "vscode-docker.registries.azure.buildImage",
					"group": "docker",
					"when": "isWorkspaceTrusted && resourceFilename =~ /dockerfile/i"
				},
				{
					"command": "vscode-docker.compose.down",
					"group": "docker",
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose"
				},
				{
					"command": "vscode-docker.compose.restart",
					"group": "docker",
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose"
				},
				{
					"command": "vscode-docker.compose.up",
					"group": "docker",
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose"
				},
				{
					"command": "vscode-docker.compose.up.subset",
					"group": "docker",
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose"
				},
				{
					"command": "vscode-docker.images.build",
					"group": "docker",
					"when": "isWorkspaceTrusted && resourceLangId == dockerfile"
				}
			],
			"view/item/context": [
				{
					"command": "vscode-docker.containers.viewLogs",
					"group": "containers_1_general@1",
					"when": "view == dockerContainers && viewItem =~ /container$/i"
				},
				{
					"command": "vscode-docker.containers.attachShell",
					"group": "containers_1_general@2",
					"when": "view == dockerContainers && viewItem =~ /^runningContainer$/i"
				},
				{
					"command": "vscode-docker.containers.inspect",
					"group": "containers_1_general@3",
					"when": "view == dockerContainers && viewItem =~ /container$/i"
				},
				{
					"command": "vscode-docker.containers.browse",
					"group": "containers_1_general@4",
					"when": "view == dockerContainers && viewItem =~ /runningContainer$/i"
				},
				{
					"command": "vscode-docker.containers.start",
					"group": "containers_1_general@5",
					"when": "view == dockerContainers && viewItem =~ /^(created|dead|exited|paused|terminated)Container$/i"
				},
				{
					"command": "vscode-docker.containers.downloadFile",
					"group": "files_1@2",
					"when": "view == dockerContainers && viewItem == containerFile"
				},
				{
					"command": "vscode-docker.containers.openFile",
					"group": "files_1@1",
					"when": "view == dockerContainers && viewItem == containerFile"
				},
				{
					"command": "vscode-docker.containers.stop",
					"group": "containers_1_general@6",
					"when": "view == dockerContainers && viewItem =~ /^(paused|restarting|running)Container$/i"
				},
				{
					"command": "vscode-docker.containers.restart",
					"group": "containers_1_general@7",
					"when": "view == dockerContainers && viewItem =~ /^runningContainer$/i"
				},
				{
					"command": "vscode-docker.containers.remove",
					"group": "containers_2_destructive@1",
					"when": "view == dockerContainers && viewItem =~ /container$/i"
				},
				{
					"command": "vscode-docker.containers.group.remove",
					"group": "containers_group_1_destructive@1",
					"when": "view == dockerContainers && viewItem =~ /containerGroup$/i"
				},
				{
					"command": "vscode-docker.containers.composeGroup.logs",
					"group": "composeGroup_1_general@1",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i"
				},
				{
					"command": "vscode-docker.containers.composeGroup.start",
					"group": "composeGroup_1_general@2",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i"
				},
				{
					"command": "vscode-docker.containers.composeGroup.stop",
					"group": "composeGroup_1_general@3",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i"
				},
				{
					"command": "vscode-docker.containers.composeGroup.restart",
					"group": "composeGroup_2_destructive@1",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i"
				},
				{
					"command": "vscode-docker.containers.composeGroup.down",
					"group": "composeGroup_2_destructive@2",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i"
				},
				{
					"command": "vscode-docker.images.run",
					"group": "images_1_run@1",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.runInteractive",
					"group": "images_1_run@2",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.inspect",
					"group": "images_2_general@1",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.pull",
					"group": "images_2_general@2",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.push",
					"group": "images_2_general@3",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.tag",
					"group": "images_2_general@4",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.copyFullTag",
					"group": "images_2_general@5",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.remove",
					"group": "images_3_destructive@1",
					"when": "view == dockerImages && viewItem == image"
				},
				{
					"command": "vscode-docker.images.group.remove",
					"group": "images_group_1_destructive@1",
					"when": "view == dockerImages && viewItem =~ /imageGroup$/i"
				},
				{
					"command": "vscode-docker.networks.inspect",
					"group": "networks_1_general@1",
					"when": "view == dockerNetworks && viewItem =~ /network$/i"
				},
				{
					"command": "vscode-docker.networks.remove",
					"group": "networks_2_destructive@1",
					"when": "view == dockerNetworks && viewItem =~ /^customNetwork$/i"
				},
				{
					"command": "vscode-docker.registries.azure.createRegistry",
					"group": "regs_1_general@1",
					"when": "view == dockerRegistries && viewItem =~ /azuresubscription/i"
				},
				{
					"command": "vscode-docker.registries.azure.deleteRegistry",
					"group": "regs_reg_2_destructive@1",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commonregistry/i"
				},
				{
					"command": "vscode-docker.registries.pullRepository",
					"group": "regs_repo_1_general@1",
					"when": "view == dockerRegistries && viewItem =~ /commonrepository/"
				},
				{
					"command": "vscode-docker.registries.azure.deleteRepository",
					"group": "regs_repo_2_destructive@1",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commonrepository/i"
				},
				{
					"command": "vscode-docker.registries.pullImage",
					"group": "regs_tag_1_general@1",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i"
				},
				{
					"command": "vscode-docker.registries.copyRemoteFullTag",
					"group": "regs_tag_1_general@2",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i"
				},
				{
					"command": "vscode-docker.registries.copyImageDigest",
					"group": "regs_tag_1_general@3",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*dockerhub/i)"
				},
				{
					"command": "vscode-docker.registries.inspectRemoteImageManifest",
					"group": "regs_tag_1_general@4",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*dockerhub/i)"
				},
				{
					"command": "vscode-docker.registries.deployImageToAzure",
					"group": "regs_tag_1_general@5",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i"
				},
				{
					"command": "vscode-docker.registries.deployImageToAca",
					"group": "regs_tag_1_general@6",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i"
				},
				{
					"command": "vscode-docker.registries.azure.untagImage",
					"group": "regs_tag_2_destructive@1",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commontag/i"
				},
				{
					"command": "vscode-docker.registries.deleteImage",
					"group": "regs_tag_2_destructive@2",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*(dockerhub|github)/i)"
				},
				{
					"command": "vscode-docker.registries.disconnectRegistry",
					"group": "regs_yyy_destructive@1",
					"when": "view == dockerRegistries && viewItem =~ /commonregistryroot/i"
				},
				{
					"command": "vscode-docker.registries.genericV2.removeTrackedRegistry",
					"group": "regs_yyy_destructive@1",
					"when": "view == dockerRegistries && viewItem =~ /commonregistry;.*generic/i"
				},
				{
					"command": "vscode-docker.registries.genericV2.addTrackedRegistry",
					"group": "regs_yyy_destructive@1",
					"when": "view == dockerRegistries && viewItem =~ /commonregistryroot;.*generic/i"
				},
				{
					"command": "vscode-docker.registries.azure.openInPortal",
					"group": "regs_zzz_common@1",
					"when": "view == dockerRegistries && viewItem =~ /azuresubscription|azure;.*(commonregistry|commonrepository)/i"
				},
				{
					"command": "vscode-docker.registries.dockerHub.openInBrowser",
					"group": "regs_zzz_common@1",
					"when": "view == dockerRegistries && viewItem =~ /(commonregistry|commonrepository|commontag);.*dockerhub/i"
				},
				{
					"command": "vscode-docker.registries.azure.viewProperties",
					"group": "regs_zzz_common@2",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commonregistry/i"
				},
				{
					"command": "vscode-docker.registries.reconnectRegistry",
					"group": "regs_zzz_common@8",
					"when": "view == dockerRegistries && viewItem =~ /registryConnectError/i"
				},
				{
					"command": "vscode-docker.registries.refresh",
					"group": "regs_zzz_common@9",
					"when": "view == dockerRegistries && viewItem == connectedRegistries"
				},
				{
					"command": "vscode-docker.registries.refresh",
					"group": "regs_zzz_common@9",
					"when": "view == dockerRegistries && viewItem =~ /commonregistry|commonregistryroot|commonrepository/"
				},
				{
					"command": "vscode-docker.volumes.inspect",
					"group": "volumes_1_general@1",
					"when": "view == dockerVolumes && viewItem == volume"
				},
				{
					"command": "vscode-docker.volumes.remove",
					"group": "volumes_2_destructive@1",
					"when": "view == dockerVolumes && viewItem == volume"
				},
				{
					"command": "vscode-docker.contexts.inspect",
					"group": "contexts_1_general@1",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i"
				},
				{
					"command": "vscode-docker.contexts.use",
					"group": "contexts_1_general@2",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i"
				},
				{
					"command": "vscode-docker.contexts.use",
					"group": "inline",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i"
				},
				{
					"command": "vscode-docker.contexts.remove",
					"group": "contexts_2_destructive@1",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /^customContext/i"
				},
				{
					"command": "vscode-docker.containers.downloadFile",
					"group": "inline@2",
					"when": "view == dockerContainers && viewItem == containerFile"
				},
				{
					"command": "vscode-docker.containers.openFile",
					"group": "inline@1",
					"when": "view == dockerContainers && viewItem == containerFile"
				}
			],
			"view/title": [
				{
					"command": "vscode-docker.containers.prune",
					"group": "navigation@1",
					"when": "view == dockerContainers"
				},
				{
					"command": "vscode-docker.containers.configureExplorer",
					"group": "navigation@8",
					"when": "view == dockerContainers"
				},
				{
					"command": "vscode-docker.networks.configureExplorer",
					"group": "navigation@8",
					"when": "view == dockerNetworks"
				},
				{
					"command": "vscode-docker.containers.refresh",
					"group": "navigation@9",
					"when": "view == dockerContainers"
				},
				{
					"command": "vscode-docker.networks.create",
					"group": "navigation@1",
					"when": "view == dockerNetworks"
				},
				{
					"command": "vscode-docker.networks.prune",
					"group": "navigation@2",
					"when": "view == dockerNetworks"
				},
				{
					"command": "vscode-docker.networks.refresh",
					"group": "navigation@9",
					"when": "view == dockerNetworks"
				},
				{
					"command": "vscode-docker.images.prune",
					"group": "navigation@2",
					"when": "view == dockerImages"
				},
				{
					"command": "vscode-docker.images.showDangling",
					"group": "navigation@3",
					"when": "view == dockerImages && !vscode-docker:danglingShown"
				},
				{
					"command": "vscode-docker.images.hideDangling",
					"group": "navigation@3",
					"when": "view == dockerImages && vscode-docker:danglingShown"
				},
				{
					"command": "vscode-docker.images.configureExplorer",
					"group": "navigation@8",
					"when": "view == dockerImages"
				},
				{
					"command": "vscode-docker.images.refresh",
					"group": "navigation@9",
					"when": "view == dockerImages"
				},
				{
					"command": "vscode-docker.registries.refresh",
					"group": "navigation@9",
					"when": "view == dockerRegistries"
				},
				{
					"command": "vscode-docker.registries.connectRegistry",
					"group": "navigation@1",
					"when": "view == dockerRegistries"
				},
				{
					"command": "vscode-docker.registries.help",
					"group": "navigation@10",
					"when": "view == dockerRegistries"
				},
				{
					"command": "vscode-docker.volumes.prune",
					"group": "navigation@1",
					"when": "view == dockerVolumes"
				},
				{
					"command": "vscode-docker.volumes.configureExplorer",
					"group": "navigation@8",
					"when": "view == dockerVolumes"
				},
				{
					"command": "vscode-docker.volumes.refresh",
					"group": "navigation@9",
					"when": "view == dockerVolumes"
				},
				{
					"command": "vscode-docker.contexts.configureExplorer",
					"group": "navigation@8",
					"when": "view == vscode-docker.views.dockerContexts"
				},
				{
					"command": "vscode-docker.contexts.refresh",
					"group": "navigation@9",
					"when": "view == vscode-docker.views.dockerContexts"
				},
				{
					"command": "vscode-docker.contexts.help",
					"group": "navigation@10",
					"when": "view == vscode-docker.views.dockerContexts"
				},
				{
					"command": "vscode-docker.help",
					"group": "navigation@10",
					"when": "view == dockerContainers || view == dockerImages || view == dockerVolumes || view == dockerNetworks"
				}
			]
		},
		"taskDefinitions": [
			{
				"properties": {
					"dockerBuild": {
						"description": "%vscode-docker.tasks.docker-build.dockerBuild.description%",
						"properties": {
							"buildArgs": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.buildArgs%",
								"type": "object"
							},
							"context": {
								"default": "${workspaceFolder}",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.context%",
								"type": "string"
							},
							"customOptions": {
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.customOptions%",
								"type": "string"
							},
							"dockerfile": {
								"default": "${workspaceFolder}/Dockerfile",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.dockerfile%",
								"type": "string"
							},
							"labels": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.labels.description%",
								"properties": {
									"includeDefaults": {
										"default": true,
										"description": "%vscode-docker.tasks.docker-build.dockerBuild.labels.includeDefaults%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"platform": {
								"anyOf": [
									{
										"properties": {
											"architecture": {
												"anyOf": [
													{
														"enum": [
															"amd64",
															"386",
															"arm64",
															"arm"
														],
														"type": "string"
													},
													{
														"type": "string"
													}
												],
												"description": "%vscode-docker.tasks.docker-build.dockerBuild.platform.architecture%"
											},
											"os": {
												"anyOf": [
													{
														"enum": [
															"linux",
															"darwin",
															"windows"
														],
														"type": "string"
													},
													{
														"type": "string"
													}
												],
												"description": "%vscode-docker.tasks.docker-build.dockerBuild.platform.os%"
											}
										},
										"type": "object"
									},
									{
										"enum": [
											"linux/amd64",
											"linux/386",
											"linux/arm64",
											"linux/arm",
											"darwin/amd64",
											"darwin/arm64",
											"windows/amd64",
											"windows/386",
											"windows/arm64",
											"windows/arm"
										],
										"type": "string"
									},
									{
										"type": "string"
									}
								],
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.platform%"
							},
							"pull": {
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.pull%",
								"type": "boolean"
							},
							"tag": {
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.tag%",
								"type": "string"
							},
							"target": {
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.target%",
								"type": "string"
							}
						},
						"required": [
							"context"
						]
					},
					"netCore": {
						"description": "%vscode-docker.tasks.docker-build.netCore.description%",
						"properties": {
							"appProject": {
								"description": "%vscode-docker.tasks.docker-build.netCore.appProject%",
								"type": "string"
							}
						},
						"required": [
							"appProject"
						]
					},
					"node": {
						"description": "%vscode-docker.tasks.docker-build.node.description%",
						"properties": {
							"package": {
								"description": "%vscode-docker.tasks.docker-build.node.package%",
								"type": "string"
							}
						}
					},
					"options": {
						"description": "%vscode-docker.tasks.options.description%",
						"properties": {
							"cwd": {
								"description": "%vscode-docker.tasks.options.cwd.description%",
								"type": "string"
							},
							"env": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "%vscode-docker.tasks.options.env.description%",
								"type": "object"
							}
						}
					},
					"platform": {
						"description": "%vscode-docker.tasks.docker-build.platform%",
						"enum": [
							"netCore",
							"node",
							"python"
						],
						"type": "string"
					},
					"python": {
						"description": "%vscode-docker.tasks.docker-build.python.description%",
						"type": "object"
					}
				},
				"required": [
					"dockerBuild"
				],
				"type": "docker-build"
			},
			{
				"properties": {
					"dockerRun": {
						"description": "%vscode-docker.tasks.docker-run.dockerRun.description%",
						"properties": {
							"command": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.command%",
								"type": "string"
							},
							"containerName": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.containerName%",
								"type": "string"
							},
							"customOptions": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.customOptions%",
								"type": "string"
							},
							"entrypoint": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.entrypoint%",
								"type": "string"
							},
							"env": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "%vscode-docker.tasks.docker-run.dockerRun.env%",
								"type": "object"
							},
							"envFiles": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.envFiles%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"extraHosts": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.extraHosts.description%",
								"items": {
									"properties": {
										"hostname": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.extraHosts.hostname%",
											"type": "string"
										},
										"ip": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.extraHosts.ip%",
											"type": "string"
										}
									},
									"required": [
										"hostname",
										"ip"
									],
									"type": "object"
								},
								"type": "array"
							},
							"image": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.image%",
								"type": "string"
							},
							"labels": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "%vscode-docker.tasks.docker-run.dockerRun.labels.description%",
								"properties": {
									"includeDefaults": {
										"default": true,
										"description": "%vscode-docker.tasks.docker-run.dockerRun.labels.includeDefaults%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"network": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.network%",
								"type": "string"
							},
							"networkAlias": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.networkAlias%",
								"type": "string"
							},
							"os": {
								"default": "Linux",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.os%",
								"enum": [
									"Linux",
									"Windows"
								],
								"type": "string"
							},
							"ports": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.description%",
								"items": {
									"properties": {
										"containerPort": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.containerPort%",
											"type": "integer"
										},
										"hostPort": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.hostPort%",
											"type": "integer"
										},
										"protocol": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.protocol%",
											"enum": [
												"tcp",
												"udp"
											],
											"type": "string"
										}
									},
									"required": [
										"containerPort"
									],
									"type": "object"
								},
								"type": "array"
							},
							"portsPublishAll": {
								"default": true,
								"description": "%vscode-docker.tasks.docker-run.dockerRun.portsPublishAll%",
								"type": "boolean"
							},
							"remove": {
								"default": false,
								"description": "%vscode-docker.tasks.docker-run.dockerRun.remove%",
								"type": "boolean"
							},
							"volumes": {
								"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.description%",
								"items": {
									"properties": {
										"containerPath": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.containerPath%",
											"type": "string"
										},
										"localPath": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.localPath%",
											"type": "string"
										},
										"permissions": {
											"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.permissions%",
											"enum": [
												"rw",
												"ro"
											],
											"type": "string"
										}
									},
									"required": [
										"localPath",
										"containerPath"
									],
									"type": "object"
								},
								"type": "array"
							}
						}
					},
					"netCore": {
						"description": "%vscode-docker.tasks.docker-run.netCore.description%",
						"properties": {
							"appProject": {
								"description": "%vscode-docker.tasks.docker-run.netCore.appProject%",
								"type": "string"
							},
							"configureSsl": {
								"description": "%vscode-docker.tasks.docker-run.netCore.configureSsl%",
								"type": "boolean"
							},
							"enableDebugging": {
								"description": "%vscode-docker.tasks.docker-run.netCore.enableDebugging%",
								"type": "boolean"
							}
						},
						"required": [
							"appProject"
						]
					},
					"node": {
						"description": "%vscode-docker.tasks.docker-run.node.description%",
						"properties": {
							"enableDebugging": {
								"description": "%vscode-docker.tasks.docker-run.node.enableDebugging%",
								"type": "boolean"
							},
							"inspectMode": {
								"description": "%vscode-docker.tasks.docker-run.node.inspectMode%",
								"type": "string"
							},
							"inspectPort": {
								"description": "%vscode-docker.tasks.docker-run.node.inspectPort%",
								"type": "integer"
							},
							"package": {
								"description": "%vscode-docker.tasks.docker-run.node.package%",
								"type": "string"
							}
						}
					},
					"options": {
						"description": "%vscode-docker.tasks.options.description%",
						"properties": {
							"cwd": {
								"description": "%vscode-docker.tasks.options.cwd.description%",
								"type": "string"
							},
							"env": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "%vscode-docker.tasks.options.env.description%",
								"type": "object"
							}
						}
					},
					"platform": {
						"description": "%vscode-docker.tasks.docker-run.platform%",
						"enum": [
							"netCore",
							"node",
							"python"
						],
						"type": "string"
					},
					"python": {
						"additionalProperties": false,
						"description": "%vscode-docker.tasks.docker-run.python.description%",
						"oneOf": [
							{
								"required": [
									"file"
								]
							},
							{
								"required": [
									"module"
								]
							}
						],
						"properties": {
							"args": {
								"description": "%vscode-docker.tasks.docker-run.python.args%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"debugPort": {
								"default": 5678,
								"description": "%vscode-docker.tasks.docker-run.python.debugPort%",
								"type": "number"
							},
							"file": {
								"default": "${file}",
								"description": "%vscode-docker.tasks.docker-run.python.file%",
								"type": "string"
							},
							"module": {
								"description": "%vscode-docker.tasks.docker-run.python.module%",
								"type": "string"
							},
							"wait": {
								"default": true,
								"description": "%vscode-docker.tasks.docker-run.python.wait%",
								"type": "boolean"
							}
						},
						"type": "object"
					}
				},
				"type": "docker-run"
			},
			{
				"properties": {
					"dockerCompose": {
						"default": {
							"files": [
								"${workspaceFolder}/docker-compose.yml"
							],
							"up": {
								"build": true,
								"detached": true
							}
						},
						"description": "%vscode-docker.tasks.docker-compose.dockerCompose.description%",
						"oneOf": [
							{
								"required": [
									"up"
								]
							},
							{
								"required": [
									"down"
								]
							}
						],
						"properties": {
							"down": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.description%",
								"properties": {
									"customOptions": {
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.customOptions%",
										"type": "string"
									},
									"removeImages": {
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.removeImages%",
										"enum": [
											"all",
											"local"
										],
										"type": "string"
									},
									"removeVolumes": {
										"default": false,
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.removeVolumes%",
										"type": "boolean"
									}
								}
							},
							"envFile": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.envFile.description%",
								"type": "string"
							},
							"envFiles": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.envFiles.description%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"files": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.files.description%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"projectName": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.projectName.description%",
								"type": "string"
							},
							"up": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.description%",
								"not": {
									"required": [
										"services",
										"profiles"
									]
								},
								"properties": {
									"build": {
										"default": true,
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.build%",
										"type": "boolean"
									},
									"customOptions": {
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.customOptions%",
										"type": "string"
									},
									"detached": {
										"default": true,
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.detached%",
										"type": "boolean"
									},
									"profiles": {
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.profiles%",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"scale": {
										"additionalProperties": {
											"type": "number"
										},
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.scale%",
										"type": "object"
									},
									"services": {
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.services%",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								}
							}
						}
					},
					"options": {
						"description": "%vscode-docker.tasks.options.description%",
						"properties": {
							"cwd": {
								"description": "%vscode-docker.tasks.options.cwd.description%",
								"type": "string"
							},
							"env": {
								"additionalProperties": {
									"type": "string"
								},
								"description": "%vscode-docker.tasks.options.env.description%",
								"type": "object"
							}
						}
					}
				},
				"required": [
					"dockerCompose"
				],
				"type": "docker-compose"
			},
			{
				"properties": {
					"dockerRun": {
						"description": "%vscode-docker.tasks.dotnet-container-sdk.dockerRun.description%",
						"properties": {
							"containerName": {
								"description": "%vscode-docker.tasks.dotnet-container-sdk.dockerRun.containerName%",
								"type": "string"
							}
						},
						"required": [
							"containerName"
						]
					},
					"netCore": {
						"description": "%vscode-docker.debug.netCore.description%",
						"properties": {
							"appProject": {
								"description": "%vscode-docker.debug.netCore.appProject%",
								"type": "string"
							}
						},
						"required": [
							"appProject"
						]
					}
				},
				"type": "dotnet-container-sdk"
			}
		],
		"views": {
			"dockerView": [
				{
					"id": "dockerContainers",
					"name": "%vscode-docker.views.dockerContainers%"
				},
				{
					"id": "dockerImages",
					"name": "%vscode-docker.views.dockerImages%"
				},
				{
					"id": "dockerRegistries",
					"name": "%vscode-docker.views.dockerRegistries%"
				},
				{
					"id": "dockerNetworks",
					"name": "%vscode-docker.views.dockerNetworks%",
					"visibility": "collapsed"
				},
				{
					"id": "dockerVolumes",
					"name": "%vscode-docker.views.dockerVolumes%",
					"visibility": "collapsed"
				},
				{
					"id": "vscode-docker.views.dockerContexts",
					"name": "%vscode-docker.views.dockerContexts%",
					"visibility": "collapsed"
				},
				{
					"id": "vscode-docker.views.help",
					"name": "%vscode-docker.views.help%"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"icon": "resources/docker.svg",
					"id": "dockerView",
					"title": "%vscode-docker.views.activityBar%"
				}
			]
		},
		"walkthroughs": [
			{
				"description": "%vscode-docker.walkthrough.dockerStart.description%",
				"featuredFor": [
					"Dockerfile",
					"docker-compose.yml",
					"docker-compose.yaml"
				],
				"id": "dockerStart",
				"steps": [
					{
						"completionEvents": [
							"onCommand:workbench.action.files.openFolder"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.openFolder.description%",
						"id": "openFolder",
						"media": {
							"markdown": "resources/walkthroughs/empty.md"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.openFolder.title%",
						"when": "workspaceFolderCount == 0 && !isMac"
					},
					{
						"completionEvents": [
							"onCommand:workbench.action.files.openFileFolder"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.openFolderMac.description%",
						"id": "openFolderMac",
						"media": {
							"markdown": "resources/walkthroughs/empty.md"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.openFolder.title%",
						"when": "workspaceFolderCount == 0 && isMac"
					},
					{
						"completionEvents": [
							"onCommand:vscode-docker.configure",
							"onCommand:vscode-docker.configureCompose"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.scaffold.description%",
						"id": "scaffold",
						"media": {
							"altText": "Modifying Dockerfiles",
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/1g-addDockerFiles.gif"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.scaffold.title%",
						"when": "workspaceFolderCount > 0"
					},
					{
						"completionEvents": [
							"onCommand:vscode-docker.images.build"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.buildImage.description%",
						"id": "buildImage",
						"media": {
							"altText": "Building a Docker image",
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/2g-buildImage.gif"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.buildImage.title%",
						"when": "workspaceFolderCount > 0"
					},
					{
						"completionEvents": [
							"onCommand:vscode-docker.images.run",
							"onCommand:vscode-docker.compose.up",
							"onCommand:vscode-docker.compose.up.subset"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.runContainer.description%",
						"id": "runContainer",
						"media": {
							"altText": "Running a Docker container",
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/3g-runContainers.gif"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.runContainer.title%"
					},
					{
						"completionEvents": [
							"onView:dockerContainers",
							"onCommand:workbench.view.extension.dockerView"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.dockerExplorer.description%",
						"id": "dockerExplorer",
						"media": {
							"altText": "Using the Docker explorer",
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/4g-useExplorer.gif"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.dockerExplorer.title%"
					},
					{
						"completionEvents": [
							"onCommand:vscode-docker.images.push"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.pushImage.description%",
						"id": "pushImage",
						"media": {
							"altText": "Pushing an image to a container registry",
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/5g-pushImage.gif"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.pushImage.title%"
					},
					{
						"completionEvents": [
							"onCommand:vscode-docker.registries.deployImageToAzure",
							"onCommand:vscode-docker.registries.deployImageToAca"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.azDeploy.description%",
						"id": "azDeploy",
						"media": {
							"altText": "Deploying to Azure App Service",
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/6g-deployToAppSvc.gif"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.azDeploy.title%",
						"when": "isAzureAccountInstalled"
					},
					{
						"completionEvents": [
							"onStepSelected"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.learn.description%",
						"id": "learn",
						"media": {
							"markdown": "resources/walkthroughs/empty.md"
						},
						"title": "%vscode-docker.walkthrough.dockerStart.learn.title%"
					}
				],
				"title": "%vscode-docker.walkthrough.dockerStart.title%"
			}
		]
	},
	"dependencies": {
		"@azure/arm-authorization": "9.0.0",
		"@microsoft/compose-language-service": "0.2.0",
		"@microsoft/vscode-container-client": "0.1.2",
		"@microsoft/vscode-docker-registries": "0.1.12",
		"dayjs": "1.11.13",
		"dockerfile-language-server-nodejs": "0.13.0",
		"fs-extra": "11.2.0",
		"gradle-to-js": "2.0.1",
		"handlebars": "4.7.8",
		"semver": "7.6.3",
		"tar": "7.4.3",
		"xml2js": "0.6.2"
	},
	"description": "Makes it easy to create, manage, and debug containerized applications.",
	"devDependencies": {
		"@types/fs-extra": "11.0.4",
		"@types/glob": "8.1.0",
		"@types/node": "22.9.0",
		"@types/semver": "7.5.8",
		"@types/xml2js": "0.4.14",
		"chai": "5.1.2",
		"glob": "11.0.0",
		"node-loader": "2.1.0",
		"ts-loader": "9.5.1",
		"umd-compat-loader": "2.1.2"
	},
	"displayName": "Docker",
	"extensionDependencies": [
		"vscode.docker",
		"vscode.yaml"
	],
	"galleryBanner": {
		"color": "#1e1e1e",
		"theme": "dark"
	},
	"icon": "resources/docker_blue.png",
	"main": "main",
	"name": "vscode-docker",
	"scripts": {
		"build": "webpack --mode production --devtool hidden-source-map",
		"ci-build": "npm test",
		"ci-package": "npm test && vsce package",
		"test-watch": "tsc -watch -p ./"
	}
}
